kind: pipeline
name: backend
load: secret

services:
  - name: postgres
    image: postgres:13-alpine
    environment:
      POSTGRES_PASSWORD: pass # set a password for the database
      POSTGRES_USER: root # set the username for the database
      POSTGRES_DB: iprwc # give the default database a name

steps:
  - name: build jar
    image: gradle:8.5-alpine
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/iprwc
    commands:
      - cd backend
      - gradle clean build

  - name: build docker image
    image: plugins/docker
    settings:
      context: ./backend
      dockerfile: ./backend/Dockerfile
      username:
        from_secret: registry-username
      password:
        from_secret: registry-password
      repo: registry.sliceofbits.com/iprwc-backend
      registry: registry.sliceofbits.com/
      tags: latest

---
kind: pipeline
name: frontend
load: secret
steps:
  - name: install
    image: node:18
    commands:
      - cd front-end
      - npm install

  - name: build angular
    image: node:18
    commands:
      - cd front-end
      - npm run build

  - name: build docker image
    image: plugins/docker
    settings:
      context: ./front-end
      dockerfile: ./front-end/Dockerfile
      username:
        from_secret: registry-username
      password:
        from_secret: registry-password
      repo: registry.sliceofbits.com/iprwc-frontend
      registry: registry.sliceofbits.com/
      tags: latest


---
kind: pipeline
name: after
load: secret

steps:
  - name: ssh
    image: appleboy/drone-ssh
    settings:
      host:
        - 188.166.107.220
      username:
        from_secret: ssh_username
      password:
        from_secret: ssh_password
      port: 22
      command_timeout: 2m
      script:
        - cd iprwc/
        - docker-compose pull && docker-compose up -d

depends_on:
  - backend
  - frontend
